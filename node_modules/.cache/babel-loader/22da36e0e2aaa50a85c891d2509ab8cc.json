{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SectionsContainer = function (_Component) {\n  _inherits(SectionsContainer, _Component);\n\n  function SectionsContainer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SectionsContainer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SectionsContainer.__proto__ || Object.getPrototypeOf(SectionsContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      activeSection: _this.props.activeSection,\n      scrollingStarted: false,\n      sectionScrolledPosition: 0,\n      windowHeight: 0\n    }, _this.removeDefaultEventListeners = function () {\n      window.removeEventListener('resize', _this.handleResize);\n      window.removeEventListener('hashchange', _this.handleAnchor);\n\n      if (_this.props.arrowNavigation) {\n        window.removeEventListener('keydown', _this.handleArrowKeys);\n      }\n    }, _this.addCSS3Scroll = function () {\n      _this.addOverflowToBody();\n\n      _this.addMouseWheelEventHandlers();\n    }, _this.addActiveClass = function () {\n      _this.removeActiveClass();\n\n      var hash = window.location.hash.substring(1);\n      var activeLinks = document.querySelectorAll('a[href=\"#' + hash + '\"]');\n\n      for (var i = 0; i < activeLinks.length; i++) {\n        activeLinks[i].className = activeLinks[i].className + (activeLinks[i].className.length > 0 ? ' ' : '') + ('' + _this.props.activeClass);\n      }\n    }, _this.removeActiveClass = function () {\n      var activeLinks = document.querySelectorAll('a:not([href=\"#' + _this.props.anchors[_this.state.activeSection] + '\"])');\n\n      for (var i = 0; i < activeLinks.length; i++) {\n        activeLinks[i].className = activeLinks[i].className.replace(/\\b ?active/g, '');\n      }\n    }, _this.addChildrenWithAnchorId = function () {\n      var index = 0;\n      return _react.Children.map(_this.props.children, function (child) {\n        var id = _this.props.anchors[index];\n        index++;\n\n        if (id) {\n          return (0, _react.cloneElement)(child, {\n            id: id\n          });\n        } else {\n          return child;\n        }\n      });\n    }, _this.addOverflowToBody = function () {\n      document.querySelector('body').style.overflow = 'hidden';\n    }, _this.removeOverflowFromBody = function () {\n      document.querySelector('body').style.overflow = 'initial';\n    }, _this.addMouseWheelEventHandlers = function () {\n      window.addEventListener('mousewheel', _this.handleMouseWheel, false);\n      window.addEventListener('DOMMouseScroll', _this.handleMouseWheel, false);\n    }, _this.removeMouseWheelEventHandlers = function () {\n      window.removeEventListener('mousewheel', _this.handleMouseWheel);\n      window.removeEventListener('DOMMouseScroll', _this.handleMouseWheel);\n    }, _this.handleMouseWheel = function (event) {\n      var e = window.event || event;\n      var delta = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail));\n      var activeSection = _this.state.activeSection - delta;\n\n      if (_this.state.scrollingStarted || activeSection < 0 || _this.childrenLength === activeSection) {\n        return false;\n      }\n\n      _this.setAnchor(activeSection);\n\n      _this.handleSectionTransition(activeSection);\n\n      _this.addActiveClass();\n    }, _this.handleResize = function () {\n      var position = 0 - _this.state.activeSection * window.innerHeight;\n\n      _this.setState({\n        scrollingStarted: true,\n        windowHeight: window.innerHeight,\n        sectionScrolledPosition: position\n      });\n\n      _this.resetScroll();\n    }, _this.handleSectionTransition = function (index) {\n      var position = 0 - index * _this.state.windowHeight;\n\n      if (!_this.props.anchors.length || index === -1 || index >= _this.props.anchors.length) {\n        return false;\n      }\n\n      _this.setState({\n        scrollingStarted: true,\n        activeSection: index,\n        sectionScrolledPosition: position\n      });\n\n      _this.resetScroll();\n\n      _this.handleScrollCallback();\n    }, _this.handleArrowKeys = function (e) {\n      var event = window.event ? window.event : e;\n      var activeSection = event.keyCode === 38 || event.keyCode === 37 ? _this.state.activeSection - 1 : event.keyCode === 40 || event.keyCode === 39 ? _this.state.activeSection + 1 : -1;\n\n      if (_this.state.scrollingStarted || activeSection < 0 || _this.childrenLength === activeSection) {\n        return false;\n      }\n\n      _this.setAnchor(activeSection);\n\n      _this.handleSectionTransition(activeSection);\n\n      _this.addActiveClass();\n    }, _this.handleTouchNav = function () {\n      var that = _this;\n\n      var touchsurface = document.querySelector('.' + _this.props.className),\n          swipedir = void 0,\n          startX = void 0,\n          startY = void 0,\n          dist = void 0,\n          distX = void 0,\n          distY = void 0,\n          threshold = 50,\n          restraint = 100,\n          allowedTime = 1000,\n          elapsedTime = void 0,\n          startTime = void 0,\n          handleswipe = function handleswipe(swipedir) {\n        console.log(swipedir);\n      };\n\n      touchsurface.addEventListener('touchstart', function (e) {\n        var touchobj = e.changedTouches[0];\n        swipedir = 'none';\n        dist = 0;\n        startX = touchobj.pageX;\n        startY = touchobj.pageY;\n        startTime = new Date().getTime();\n      }, false);\n      touchsurface.addEventListener('touchmove', function (e) {\n        e.preventDefault();\n      }, false);\n      touchsurface.addEventListener('touchend', function (e) {\n        var touchobj = e.changedTouches[0];\n        distX = touchobj.pageX - startX;\n        distY = touchobj.pageY - startY;\n        elapsedTime = new Date().getTime() - startTime;\n\n        if (elapsedTime <= allowedTime) {\n          if (Math.abs(distY) >= threshold && Math.abs(distX) <= restraint) {\n            swipedir = distY < 0 ? 'up' : 'down';\n            var direction = swipedir === 'down' ? that.state.activeSection - 1 : swipedir === 'up' ? that.state.activeSection + 1 : -1;\n            var hash = that.props.anchors[direction];\n\n            if (!that.props.anchors.length || hash) {\n              window.location.hash = '#' + hash;\n            }\n\n            that.handleSectionTransition(direction);\n          }\n        }\n\n        handleswipe(swipedir);\n      }, false);\n    }, _this.handleAnchor = function () {\n      var hash = window.location.hash.substring(1);\n\n      var activeSection = _this.props.anchors.indexOf(hash);\n\n      if (_this.state.activeSection !== activeSection) {\n        _this.handleSectionTransition(activeSection);\n\n        _this.addActiveClass();\n      }\n    }, _this.setAnchor = function (index) {\n      var hash = _this.props.anchors[index];\n\n      if (!_this.props.anchors.length || hash) {\n        window.location.hash = '#' + hash;\n      }\n    }, _this.handleScrollCallback = function () {\n      if (_this.props.scrollCallback) {\n        setTimeout(function () {\n          return _this.props.scrollCallback(_this.state);\n        }, 0);\n      }\n    }, _this.resetScroll = function () {\n      _this.clearResetScrollTimer();\n\n      _this.resetScrollTimer = setTimeout(function () {\n        _this.setState({\n          scrollingStarted: false\n        });\n      }, _this.props.delay + 300);\n    }, _this.clearResetScrollTimer = function () {\n      if (_this.resetScrollTimer) {\n        clearTimeout(_this.resetScrollTimer);\n      }\n    }, _this.renderNavigation = function () {\n      var navigationStyle = {\n        position: 'fixed',\n        zIndex: '10',\n        right: '20px',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n      };\n\n      var anchors = _this.props.anchors.map(function (link, index) {\n        var anchorStyle = {\n          display: 'block',\n          margin: '10px',\n          borderRadius: '100%',\n          backgroundColor: '#556270',\n          padding: '5px',\n          transition: 'all 0.2s',\n          transform: _this.state.activeSection === index ? 'scale(1.3)' : 'none'\n        };\n        return _react2.default.createElement('a', {\n          href: '#' + link,\n          key: index,\n          className: _this.props.navigationAnchorClass || 'Navigation-Anchor',\n          style: _this.props.navigationAnchorClass ? null : anchorStyle\n        });\n      });\n\n      return _react2.default.createElement('div', {\n        className: _this.props.navigationClass || 'Navigation',\n        style: _this.props.navigationClass ? null : navigationStyle\n      }, anchors);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(SectionsContainer, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        verticalAlign: this.props.verticalAlign,\n        sectionClassName: this.props.sectionClassName,\n        sectionPaddingTop: this.props.sectionPaddingTop,\n        sectionPaddingBottom: this.props.sectionPaddingBottom\n      };\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearResetScrollTimer();\n      this.removeDefaultEventListeners();\n      this.removeMouseWheelEventHandlers();\n      this.removeOverflowFromBody();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.childrenLength = this.props.children.length;\n      this.handleResize();\n      window.addEventListener('resize', this.handleResize);\n\n      if (!this.props.scrollBar) {\n        this.addCSS3Scroll();\n        this.handleAnchor();\n        window.addEventListener('hashchange', this.handleAnchor, false);\n\n        if (this.props.arrowNavigation) {\n          window.addEventListener('keydown', this.handleArrowKeys);\n        }\n\n        if (this.props.touchNavigation) {\n          this.handleTouchNav();\n        }\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.activeSection !== nextProps.activeSection) {\n        this.setState({\n          activeSection: nextProps.activeSection\n        });\n        this.setAnchor(nextProps.activeSection);\n        this.handleSectionTransition(nextProps.activeSection);\n        this.addActiveClass();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var containerStyle = {\n        height: '100%',\n        width: '100%',\n        position: 'relative',\n        transform: 'translate3d(0px, ' + this.state.sectionScrolledPosition + 'px, 0px)',\n        transition: 'all ' + this.props.delay + 'ms ease'\n      };\n      return _react2.default.createElement('div', null, _react2.default.createElement('div', {\n        className: this.props.className,\n        style: containerStyle\n      }, this.props.scrollBar ? this.addChildrenWithAnchorId() : this.props.children), this.props.navigation && !this.props.scrollBar ? this.renderNavigation() : null);\n    }\n  }]);\n\n  return SectionsContainer;\n}(_react.Component);\n\nSectionsContainer.defaultProps = {\n  scrollCallback: null,\n  delay: 1000,\n  verticalAlign: false,\n  scrollBar: false,\n  navigation: true,\n  className: 'SectionContainer',\n  sectionClassName: 'Section',\n  anchors: [],\n  activeClass: 'active',\n  sectionPaddingTop: '0',\n  sectionPaddingBottom: '0',\n  arrowNavigation: true,\n  activeSection: 0,\n  touchNavigation: true\n};\nSectionsContainer.propTypes = {\n  scrollCallback: _propTypes2.default.func,\n  delay: _propTypes2.default.number,\n  verticalAlign: _propTypes2.default.bool,\n  scrollBar: _propTypes2.default.bool,\n  navigation: _propTypes2.default.bool,\n  className: _propTypes2.default.string,\n  sectionClassName: _propTypes2.default.string,\n  navigationClass: _propTypes2.default.string,\n  navigationAnchorClass: _propTypes2.default.string,\n  activeClass: _propTypes2.default.string,\n  sectionPaddingTop: _propTypes2.default.string,\n  sectionPaddingBottom: _propTypes2.default.string,\n  arrowNavigation: _propTypes2.default.bool,\n  activeSection: _propTypes2.default.number,\n  touchNavigation: _propTypes2.default.bool\n};\nSectionsContainer.childContextTypes = {\n  verticalAlign: _propTypes2.default.bool,\n  sectionClassName: _propTypes2.default.string,\n  sectionPaddingTop: _propTypes2.default.string,\n  sectionPaddingBottom: _propTypes2.default.string\n};\nexports.default = SectionsContainer;","map":null,"metadata":{},"sourceType":"script"}