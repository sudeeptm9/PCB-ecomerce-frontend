{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\athya\\\\Downloads\\\\pcb sudeep\\\\Propcb-frontend-master\\\\src\\\\wrappers\\\\product\\\\ProductGridEleven.js\";\n\nimport PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProducts } from \"../../helpers/product\";\nimport ProductGridSingleEleven from \"../../components/product/ProductGridSingleEleven\";\nimport { addToCart as _addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist as _addToWishlist } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare as _addToCompare } from \"../../redux/actions/compareActions\";\n\nvar ProductGridEleven = function ProductGridEleven(_ref) {\n  var products = _ref.products,\n      currency = _ref.currency,\n      addToCart = _ref.addToCart,\n      addToWishlist = _ref.addToWishlist,\n      addToCompare = _ref.addToCompare,\n      cartItems = _ref.cartItems,\n      wishlistItems = _ref.wishlistItems,\n      compareItems = _ref.compareItems,\n      sliderClassName = _ref.sliderClassName,\n      spaceBottomClass = _ref.spaceBottomClass,\n      colorClass = _ref.colorClass,\n      productGridStyleClass = _ref.productGridStyleClass;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, products.map(function (product) {\n    return /*#__PURE__*/React.createElement(ProductGridSingleEleven, {\n      sliderClassName: sliderClassName,\n      spaceBottomClass: spaceBottomClass,\n      colorClass: colorClass,\n      productGridStyleClass: productGridStyleClass,\n      product: product,\n      currency: currency,\n      addToCart: addToCart,\n      addToWishlist: addToWishlist,\n      addToCompare: addToCompare,\n      cartItem: cartItems.filter(function (cartItem) {\n        return cartItem.id === product.id;\n      })[0],\n      wishlistItem: wishlistItems.filter(function (wishlistItem) {\n        return wishlistItem.id === product.id;\n      })[0],\n      compareItem: compareItems.filter(function (compareItem) {\n        return compareItem.id === product.id;\n      })[0],\n      key: product.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nProductGridEleven.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItems: PropTypes.array,\n  compareItems: PropTypes.array,\n  currency: PropTypes.object,\n  products: PropTypes.array,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  colorClass: PropTypes.string,\n  productGridStyleClass: PropTypes.string,\n  wishlistItems: PropTypes.array\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    products: getProducts(state.productData.products, ownProps.category, ownProps.type, ownProps.limit),\n    currency: state.currencyData,\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addToCart: function addToCart(item, addToast, quantityCount, selectedProductColor, selectedProductSize) {\n      dispatch(_addToCart(item, addToast, quantityCount, selectedProductColor, selectedProductSize));\n    },\n    addToWishlist: function addToWishlist(item, addToast) {\n      dispatch(_addToWishlist(item, addToast));\n    },\n    addToCompare: function addToCompare(item, addToast) {\n      dispatch(_addToCompare(item, addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridEleven);","map":{"version":3,"sources":["C:/Users/athya/Downloads/pcb sudeep/Propcb-frontend-master/src/wrappers/product/ProductGridEleven.js"],"names":["PropTypes","React","Fragment","connect","getProducts","ProductGridSingleEleven","addToCart","addToWishlist","addToCompare","ProductGridEleven","products","currency","cartItems","wishlistItems","compareItems","sliderClassName","spaceBottomClass","colorClass","productGridStyleClass","map","product","filter","cartItem","id","wishlistItem","compareItem","propTypes","func","array","object","string","mapStateToProps","state","ownProps","productData","category","type","limit","currencyData","cartData","wishlistData","compareData","mapDispatchToProps","dispatch","item","addToast","quantityCount","selectedProductColor","selectedProductSize"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProducts } from \"../../helpers/product\";\nimport ProductGridSingleEleven from \"../../components/product/ProductGridSingleEleven\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare } from \"../../redux/actions/compareActions\";\n\nconst ProductGridEleven = ({\n  products,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItems,\n  wishlistItems,\n  compareItems,\n  sliderClassName,\n  spaceBottomClass,\n  colorClass,\n  productGridStyleClass\n}) => {\n  return (\n    <Fragment>\n      {products.map((product) => {\n        return (\n          <ProductGridSingleEleven\n            sliderClassName={sliderClassName}\n            spaceBottomClass={spaceBottomClass}\n            colorClass={colorClass}\n            productGridStyleClass={productGridStyleClass}\n            product={product}\n            currency={currency}\n            addToCart={addToCart}\n            addToWishlist={addToWishlist}\n            addToCompare={addToCompare}\n            cartItem={\n              cartItems.filter((cartItem) => cartItem.id === product.id)[0]\n            }\n            wishlistItem={\n              wishlistItems.filter(\n                (wishlistItem) => wishlistItem.id === product.id\n              )[0]\n            }\n            compareItem={\n              compareItems.filter(\n                (compareItem) => compareItem.id === product.id\n              )[0]\n            }\n            key={product.id}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nProductGridEleven.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItems: PropTypes.array,\n  compareItems: PropTypes.array,\n  currency: PropTypes.object,\n  products: PropTypes.array,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  colorClass: PropTypes.string,\n  productGridStyleClass: PropTypes.string,\n  wishlistItems: PropTypes.array\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    products: getProducts(\n      state.productData.products,\n      ownProps.category,\n      ownProps.type,\n      ownProps.limit\n    ),\n    currency: state.currencyData,\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addToCart: (\n      item,\n      addToast,\n      quantityCount,\n      selectedProductColor,\n      selectedProductSize\n    ) => {\n      dispatch(\n        addToCart(\n          item,\n          addToast,\n          quantityCount,\n          selectedProductColor,\n          selectedProductSize\n        )\n      );\n    },\n    addToWishlist: (item, addToast) => {\n      dispatch(addToWishlist(item, addToast));\n    },\n    addToCompare: (item, addToast) => {\n      dispatch(addToCompare(item, addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridEleven);\n"]},"metadata":{},"sourceType":"module"}