{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\Developments\\\\Web Devolopment\\\\pcbSudeep\\\\PCB-ecomerce-frontend-main\\\\src\\\\components\\\\header\\\\sub-components\\\\MenuCart.js\";\n\nimport PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../../helpers/product\";\n\nvar MenuCart = function MenuCart(_ref) {\n  var cartData = _ref.cartData,\n      currency = _ref.currency,\n      deleteFromCart = _ref.deleteFromCart;\n  var cartTotalPrice = 0;\n\n  var _useToasts = useToasts(),\n      addToast = _useToasts.addToast;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shopping-cart-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, cartData && cartData.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shopping-cart-btn btn-hover text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"default-btn\",\n    to: process.env.PUBLIC_URL + \"/cart\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"view cart\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"default-btn\",\n    to: process.env.PUBLIC_URL + \"/checkout\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"checkout\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"No items added to cart\"));\n};\n\nMenuCart.propTypes = {\n  cartData: PropTypes.array,\n  currency: PropTypes.object,\n  deleteFromCart: PropTypes.func\n};\nexport default MenuCart;","map":{"version":3,"sources":["F:/Developments/Web Devolopment/pcbSudeep/PCB-ecomerce-frontend-main/src/components/header/sub-components/MenuCart.js"],"names":["PropTypes","React","Fragment","Link","useToasts","getDiscountPrice","MenuCart","cartData","currency","deleteFromCart","cartTotalPrice","addToast","length","process","env","PUBLIC_URL","propTypes","array","object","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA4C;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AAC3D,MAAIC,cAAc,GAAG,CAArB;;AAD2D,mBAEtCN,SAAS,EAF6B;AAAA,MAEnDO,QAFmD,cAEnDA,QAFmD;;AAG3D,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,IAAIA,QAAQ,CAACK,MAAT,GAAkB,CAA9B,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAuEE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,EAAE,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,EAAE,EAAEF,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,WAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAvEF,CADD,gBAqFC;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAtFJ,CADF;AA2FD,CA9FD;;AAgGAT,QAAQ,CAACU,SAAT,GAAqB;AACnBT,EAAAA,QAAQ,EAAEP,SAAS,CAACiB,KADD;AAEnBT,EAAAA,QAAQ,EAAER,SAAS,CAACkB,MAFD;AAGnBT,EAAAA,cAAc,EAAET,SAAS,CAACmB;AAHP,CAArB;AAMA,eAAeb,QAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../../helpers/product\";\n\nconst MenuCart = ({ cartData, currency, deleteFromCart }) => {\n  let cartTotalPrice = 0;\n  const { addToast } = useToasts();\n  return (\n    <div className=\"shopping-cart-content\">\n      {cartData && cartData.length > 0 ? (\n        <Fragment>\n          {/* <ul>\n            {cartData.map((single, key) => {\n              const discountedPrice = getDiscountPrice(\n                single.price,\n                single.discount\n              );\n              const finalProductPrice = (\n                single.price * currency.currencyRate\n              ).toFixed(2);\n              const finalDiscountedPrice = (\n                discountedPrice * currency.currencyRate\n              ).toFixed(2);\n\n              discountedPrice != null\n                ? (cartTotalPrice += finalDiscountedPrice * single.quantity)\n                : (cartTotalPrice += finalProductPrice * single.quantity);\n\n              return (\n                <li className=\"single-shopping-cart\" key={key}>\n                  <div className=\"shopping-cart-img\">\n                    <Link to={process.env.PUBLIC_URL + \"/product/\" + single.id}>\n                      <img\n                        alt=\"\"\n                        src={process.env.PUBLIC_URL + single.image[0]}\n                        className=\"img-fluid\"\n                      />\n                    </Link>\n                  </div>\n                  <div className=\"shopping-cart-title\">\n                    <h4>\n                      <Link\n                        to={process.env.PUBLIC_URL + \"/product/\" + single.id}\n                      >\n                        {\" \"}\n                        {single.name}{\" \"}\n                      </Link>\n                    </h4>\n                    <h6>Qty: {single.quantity}</h6>\n                    <span>\n                      {discountedPrice !== null\n                        ? currency.currencySymbol + finalDiscountedPrice\n                        : currency.currencySymbol + finalProductPrice}\n                    </span>\n                    {single.selectedProductColor &&\n                    single.selectedProductSize ? (\n                      <div className=\"cart-item-variation\">\n                        <span>Color: {single.selectedProductColor}</span>\n                        <span>Size: {single.selectedProductSize}</span>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                  <div className=\"shopping-cart-delete\">\n                    <button onClick={() => deleteFromCart(single, addToast)}>\n                      <i className=\"fa fa-times-circle\" />\n                    </button>\n                  </div>\n                </li>\n              );\n            })}\n          </ul> */}\n          {/* <div className=\"shopping-cart-total\">\n            <h4>\n              Total :{\" \"}\n              <span className=\"shop-total\">\n                {currency.currencySymbol + cartTotalPrice.toFixed(2)}\n              </span>\n            </h4>\n          </div> */}\n          <div className=\"shopping-cart-btn btn-hover text-center\">\n            <Link className=\"default-btn\" to={process.env.PUBLIC_URL + \"/cart\"}>\n              view cart\n            </Link>\n            <Link\n              className=\"default-btn\"\n              to={process.env.PUBLIC_URL + \"/checkout\"}\n            >\n              checkout\n            </Link>\n          </div>\n        </Fragment>\n      ) : (\n        <p className=\"text-center\">No items added to cart</p>\n      )}\n    </div>\n  );\n};\n\nMenuCart.propTypes = {\n  cartData: PropTypes.array,\n  currency: PropTypes.object,\n  deleteFromCart: PropTypes.func\n};\n\nexport default MenuCart;\n"]},"metadata":{},"sourceType":"module"}