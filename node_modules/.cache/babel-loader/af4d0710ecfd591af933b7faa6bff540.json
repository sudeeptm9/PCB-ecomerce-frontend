{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\athya\\\\Documents\\\\mini project\\\\mini pro\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\athya\\\\Documents\\\\mini project\\\\mini pro\\\\frontend\\\\src\\\\pages\\\\shop\\\\ShopGridFilter.js\";\n\nimport PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaTags from 'react-meta-tags';\nimport Paginator from 'react-hooks-paginator';\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\nimport { connect } from 'react-redux';\nimport { getSortedProducts } from '../../helpers/product';\nimport LayoutOne from '../../layouts/LayoutOne';\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\nimport ShopTopbarFilter from '../../wrappers/product/ShopTopbarFilter';\nimport ShopProducts from '../../wrappers/product/ShopProducts';\n\nvar ShopGridFilter = function ShopGridFilter(_ref) {\n  var location = _ref.location,\n      products = _ref.products;\n\n  var _useState = useState('grid three-column'),\n      _useState2 = _slicedToArray(_useState, 2),\n      layout = _useState2[0],\n      setLayout = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sortType = _useState4[0],\n      setSortType = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sortValue = _useState6[0],\n      setSortValue = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filterSortType = _useState8[0],\n      setFilterSortType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filterSortValue = _useState10[0],\n      setFilterSortValue = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      offset = _useState12[0],\n      setOffset = _useState12[1];\n\n  var _useState13 = useState(1),\n      _useState14 = _slicedToArray(_useState13, 2),\n      currentPage = _useState14[0],\n      setCurrentPage = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      currentData = _useState16[0],\n      setCurrentData = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sortedProducts = _useState18[0],\n      setSortedProducts = _useState18[1];\n\n  var pageLimit = 15;\n  var pathname = location.pathname;\n\n  var getLayout = function getLayout(layout) {\n    setLayout(layout);\n  };\n\n  var getSortParams = function getSortParams(sortType, sortValue) {\n    setSortType(sortType);\n    setSortValue(sortValue);\n  };\n\n  var getFilterSortParams = function getFilterSortParams(sortType, sortValue) {\n    setFilterSortType(sortType);\n    setFilterSortValue(sortValue);\n  };\n\n  useEffect(function () {\n    var sortedProducts = getSortedProducts(products, sortType, sortValue);\n    var filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\n    sortedProducts = filterSortedProducts;\n    setSortedProducts(sortedProducts);\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MetaTags, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Flone | Shop Page\"), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Shop page of flone react minimalist eCommerce template.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(BreadcrumbsItem, {\n    to: process.env.PUBLIC_URL + '/',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(BreadcrumbsItem, {\n    to: process.env.PUBLIC_URL + pathname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Shop\"), /*#__PURE__*/React.createElement(LayoutOne, {\n    headerTop: \"visible\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-area pt-95 pb-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ShopTopbarFilter, {\n    getLayout: getLayout,\n    getFilterSortParams: getFilterSortParams,\n    productCount: products.length,\n    sortedProductCount: currentData.length,\n    products: products,\n    getSortParams: getSortParams,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(ShopProducts, {\n    layout: layout,\n    products: currentData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pro-pagination-style text-center mt-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Paginator, {\n    totalRecords: sortedProducts.length,\n    pageLimit: pageLimit,\n    pageNeighbours: 2,\n    setOffset: setOffset,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    pageContainerClass: \"mb-0 mt-0\",\n    pagePrevText: \"\\xAB\",\n    pageNextText: \"\\xBB\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nShopGridFilter.propTypes = {\n  location: PropTypes.object,\n  products: PropTypes.array\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.productData.products\n  };\n};\n\nexport default connect(mapStateToProps)(ShopGridFilter);","map":{"version":3,"sources":["C:/Users/athya/Documents/mini project/mini pro/frontend/src/pages/shop/ShopGridFilter.js"],"names":["PropTypes","React","Fragment","useState","useEffect","MetaTags","Paginator","BreadcrumbsItem","connect","getSortedProducts","LayoutOne","Breadcrumb","ShopTopbarFilter","ShopProducts","ShopGridFilter","location","products","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pageLimit","pathname","getLayout","getSortParams","getFilterSortParams","filterSortedProducts","slice","process","env","PUBLIC_URL","length","propTypes","object","array","mapStateToProps","state","productData"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport Paginator from 'react-hooks-paginator';\r\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\r\nimport { connect } from 'react-redux';\r\nimport { getSortedProducts } from '../../helpers/product';\r\nimport LayoutOne from '../../layouts/LayoutOne';\r\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\r\nimport ShopTopbarFilter from '../../wrappers/product/ShopTopbarFilter';\r\nimport ShopProducts from '../../wrappers/product/ShopProducts';\r\n\r\nconst ShopGridFilter = ({location, products}) => {\r\n    const [layout, setLayout] = useState('grid three-column');\r\n    const [sortType, setSortType] = useState('');\r\n    const [sortValue, setSortValue] = useState('');\r\n    const [filterSortType, setFilterSortType] = useState('');\r\n    const [filterSortValue, setFilterSortValue] = useState('');\r\n    const [offset, setOffset] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n    const pageLimit = 15;\r\n    const {pathname} = location;\r\n\r\n    const getLayout = (layout) => {\r\n        setLayout(layout)\r\n    }\r\n\r\n    const getSortParams = (sortType, sortValue) => {\r\n        setSortType(sortType);\r\n        setSortValue(sortValue);\r\n    }\r\n\r\n    const getFilterSortParams = (sortType, sortValue) => {\r\n        setFilterSortType(sortType);\r\n        setFilterSortValue(sortValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\r\n        sortedProducts = filterSortedProducts;\r\n        setSortedProducts(sortedProducts);\r\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <title>Flone | Shop Page</title>\r\n                <meta name=\"description\" content=\"Shop page of flone react minimalist eCommerce template.\" />\r\n            </MetaTags>\r\n\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>Home</BreadcrumbsItem>\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>Shop</BreadcrumbsItem>\r\n\r\n            <LayoutOne headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                <Breadcrumb />\r\n\r\n                <div className=\"shop-area pt-95 pb-100\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                {/* shop topbar filter */}\r\n                                <ShopTopbarFilter getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} products={products} getSortParams={getSortParams}/>\r\n\r\n                                {/* shop page content default */}\r\n                                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                                {/* shop product pagination */}\r\n                                <div className=\"pro-pagination-style text-center mt-30\">\r\n                                    <Paginator\r\n                                        totalRecords={sortedProducts.length}\r\n                                        pageLimit={pageLimit}\r\n                                        pageNeighbours={2}\r\n                                        setOffset={setOffset}\r\n                                        currentPage={currentPage}\r\n                                        setCurrentPage={setCurrentPage}\r\n                                        pageContainerClass=\"mb-0 mt-0\"\r\n                                        pagePrevText=\"«\"\r\n                                        pageNextText=\"»\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LayoutOne>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nShopGridFilter.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        products: state.productData.products\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopGridFilter);"]},"metadata":{},"sourceType":"module"}