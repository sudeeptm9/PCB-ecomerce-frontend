{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\athya\\\\Documents\\\\mini project\\\\mini pro\\\\frontend\\\\src\\\\components\\\\newsletter\\\\SubscribeEmailTwo.js\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\n\nvar CustomForm = function CustomForm(_ref) {\n  var status = _ref.status,\n      message = _ref.message,\n      onValidated = _ref.onValidated,\n      spaceTopClass = _ref.spaceTopClass,\n      subscribeBtnClass = _ref.subscribeBtnClass;\n  var email;\n\n  var submit = function submit() {\n    email && email.value.indexOf(\"@\") > -1 && onValidated({\n      EMAIL: email.value\n    });\n    email.value = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subscribe-form-3 \".concat(spaceTopClass ? spaceTopClass : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mc-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"email\",\n    ref: function ref(node) {\n      return email = node;\n    },\n    type: \"email\",\n    placeholder: \"Your Email Address\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })), status === \"sending\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#3498db\",\n      fontSize: \"12px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"sending...\"), status === \"error\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#e74c3c\",\n      fontSize: \"12px\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), status === \"success\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#2ecc71\",\n      fontSize: \"12px\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clear-3 \".concat(subscribeBtnClass ? subscribeBtnClass : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"SUBSCRIBE\"))));\n};\n\nvar SubscribeEmailTwo = function SubscribeEmailTwo(_ref2) {\n  var mailchimpUrl = _ref2.mailchimpUrl,\n      spaceTopClass = _ref2.spaceTopClass,\n      subscribeBtnClass = _ref2.subscribeBtnClass;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MailchimpSubscribe, {\n    url: mailchimpUrl,\n    render: function render(_ref3) {\n      var subscribe = _ref3.subscribe,\n          status = _ref3.status,\n          message = _ref3.message;\n      return /*#__PURE__*/React.createElement(CustomForm, {\n        status: status,\n        message: message,\n        onValidated: function onValidated(formData) {\n          return subscribe(formData);\n        },\n        spaceTopClass: spaceTopClass,\n        subscribeBtnClass: subscribeBtnClass,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nSubscribeEmailTwo.propTypes = {\n  mailchimpUrl: PropTypes.string,\n  spaceTopClass: PropTypes.string\n};\nexport default SubscribeEmailTwo;","map":{"version":3,"sources":["C:/Users/athya/Documents/mini project/mini pro/frontend/src/components/newsletter/SubscribeEmailTwo.js"],"names":["PropTypes","React","MailchimpSubscribe","CustomForm","status","message","onValidated","spaceTopClass","subscribeBtnClass","email","submit","value","indexOf","EMAIL","node","color","fontSize","__html","SubscribeEmailTwo","mailchimpUrl","subscribe","formData","propTypes","string"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\n\r\nconst CustomForm = ({\r\n  status,\r\n  message,\r\n  onValidated,\r\n  spaceTopClass,\r\n  subscribeBtnClass\r\n}) => {\r\n  let email;\r\n  const submit = () => {\r\n    email &&\r\n      email.value.indexOf(\"@\") > -1 &&\r\n      onValidated({\r\n        EMAIL: email.value\r\n      });\r\n\r\n    email.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={`subscribe-form-3 ${spaceTopClass ? spaceTopClass : \"\"}`}>\r\n      <div className=\"mc-form\">\r\n        <div>\r\n          <input\r\n            className=\"email\"\r\n            ref={node => (email = node)}\r\n            type=\"email\"\r\n            placeholder=\"Your Email Address\"\r\n            required\r\n          />\r\n        </div>\r\n        {status === \"sending\" && (\r\n          <div style={{ color: \"#3498db\", fontSize: \"12px\" }}>sending...</div>\r\n        )}\r\n        {status === \"error\" && (\r\n          <div\r\n            style={{ color: \"#e74c3c\", fontSize: \"12px\" }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n        {status === \"success\" && (\r\n          <div\r\n            style={{ color: \"#2ecc71\", fontSize: \"12px\" }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n        <div\r\n          className={`clear-3 ${subscribeBtnClass ? subscribeBtnClass : \"\"}`}\r\n        >\r\n          <button className=\"button\" onClick={submit}>\r\n            SUBSCRIBE\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SubscribeEmailTwo = ({\r\n  mailchimpUrl,\r\n  spaceTopClass,\r\n  subscribeBtnClass\r\n}) => {\r\n  return (\r\n    <div>\r\n      <MailchimpSubscribe\r\n        url={mailchimpUrl}\r\n        render={({ subscribe, status, message }) => (\r\n          <CustomForm\r\n            status={status}\r\n            message={message}\r\n            onValidated={formData => subscribe(formData)}\r\n            spaceTopClass={spaceTopClass}\r\n            subscribeBtnClass={subscribeBtnClass}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSubscribeEmailTwo.propTypes = {\r\n  mailchimpUrl: PropTypes.string,\r\n  spaceTopClass: PropTypes.string\r\n};\r\n\r\nexport default SubscribeEmailTwo;\r\n"]},"metadata":{},"sourceType":"module"}